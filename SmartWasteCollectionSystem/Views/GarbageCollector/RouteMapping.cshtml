@model List<SmartWasteCollectionSystem.Models.User>
@using System.Text.Json
@{
    ViewData["Title"] = "Route Mapping";
}

<link rel="stylesheet" href="https://unpkg.com/leaflet/dist/leaflet.css" />
<link rel="stylesheet" href="https://unpkg.com/leaflet-routing-machine/dist/leaflet-routing-machine.css" />

<script src="https://unpkg.com/leaflet/dist/leaflet.js"></script>
<script src="https://unpkg.com/leaflet-routing-machine/dist/leaflet-routing-machine.js"></script>
<div id="map" style="height: 600px;"></div>

<script>
    var dest = @Html.Raw(JsonSerializer.Serialize(Model));

    var map = L.map('map').setView([14.5995, 120.9842], 13);

    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
        attribution: '&copy; OpenStreetMap contributors'
    }).addTo(map);

    var userMarker = null;
    var routingControl = null;

    var destinations = dest.map(d => L.latLng(d.Latitude, d.Longitude));

    // Watch position (updates continuously)
    if (navigator.geolocation) {
        navigator.geolocation.watchPosition(function (position) {
            var userLat = position.coords.latitude;
            var userLng = position.coords.longitude;
            var userLocation = L.latLng(userLat, userLng);

            // Update or add user marker
            if (!userMarker) {
                userMarker = L.marker(userLocation).addTo(map)
                    .bindPopup("You are here").openPopup();
            } else {
                userMarker.setLatLng(userLocation);
            }

            // Center map on user
            map.setView(userLocation, 15);

            // Build full waypoints list: [current location + all destinations]
            var waypoints = [userLocation].concat(destinations);

            // Update route dynamically
            if (routingControl) {
                routingControl.setWaypoints(waypoints);
            } else {
                routingControl = L.Routing.control({
                    waypoints: waypoints,
                    routeWhileDragging: false,
                    router: L.Routing.osrmv1({
                        serviceUrl: 'https://router.project-osrm.org/route/v1'
                    })
                }).addTo(map);
            }
        }, function (error) {
            alert("Error getting location: " + error.message);
        }, {
            enableHighAccuracy: true,
            maximumAge: 0
        });
    } else {
        alert("Geolocation is not supported by this browser.");
    }
</script>