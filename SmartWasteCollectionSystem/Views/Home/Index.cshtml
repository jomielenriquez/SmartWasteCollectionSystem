@using System.Security.Claims
@model DashboardModel
@{
    ViewData["Title"] = "Dashboard";
    var userRole = User.FindFirstValue(ClaimTypes.Role);
}
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

@if (userRole == "Admin")
{
    <div class="container my-4">
        <div class="row g-4">
            <!-- Garbage Collection Schedule -->
            <div class="col-12">
                <div class="card shadow-sm border-0 rounded-3">
                    <div class="card-header bg-success text-white fw-bold">
                        <i class="fas fa-dumpster me-2"></i> Garbage Collection Schedule
                    </div>
                    <div class="card-body">
                        <h5 class="card-title">Create New Garbage Collection Schedule</h5>
                        <p class="card-text text-muted">
                            Keep your schedule updated for efficient collection.
                        </p>
                        <a href="/GarbageCollectionSchedule/GarbageCollectionScheduleEdit"
                           class="btn btn-success">
                            <i class="fas fa-plus-circle me-2"></i> Add New Schedule
                        </a>
                    </div>
                </div>
            </div>

            <!-- New Users -->
            <div class="col-md-6">
                <div class="card shadow-sm border-0 rounded-3">
                    <div class="card-header bg-light fw-bold">
                        <i class="fas fa-users me-2"></i> New Users
                    </div>
                    <ul class="list-group list-group-flush">
                        @foreach (var user in Model.Users)
                        {
                            <li class="list-group-item d-flex justify-content-between align-items-center">
                                <span>
                                    <i class="fas fa-user text-success me-2"></i>
                                    @user.FirstName @user.LastName
                                    <small class="text-muted">(@user.Email)</small>
                                </span>
                            </li>
                        }
                    </ul>
                </div>
            </div>

            <!-- Garbage Collection Schedules -->
            <div class="col-md-6">
                <div class="card shadow-sm border-0 rounded-3">
                    <div class="card-header bg-light fw-bold">
                        <i class="fas fa-calendar-alt me-2"></i> Garbage Collection Schedules
                    </div>
                    <ul class="list-group list-group-flush">
                        @foreach (var sched in Model.GarbageCollectionSchedules)
                        {
                            <li class="list-group-item d-flex justify-content-between align-items-center">
                                <span>
                                    <i class="fas fa-clock text-success me-2"></i>
                                    @sched.DayOfWeek.Day @sched.FrequencyType.FrequencyName
                                    <span class="badge bg-secondary">@sched.CollectionTime.ToString("hh:mm tt")</span>
                                </span>
                            </li>
                        }
                    </ul>
                </div>
            </div>
        </div>
    </div>

    <div class="container my-4">
        <div class="row g-4">
            <!-- Existing cards (Garbage Collection Schedule, New Users, etc.) -->
            <!-- Graph: New Users Trend -->
            <div class="col-md-6">
                <div class="card shadow-sm border-0 rounded-3">
                    <div class="card-header bg-light fw-bold">
                        <i class="fas fa-chart-line me-2"></i> User Growth (This Month)
                    </div>
                    <div class="card-body">
                        <canvas id="usersChart"></canvas>
                    </div>
                </div>
            </div>

        </div>
    </div>

    <script>
        // Users Line Chart (example: number of new users per day this month)
        const ctxUsers = document.getElementById('usersChart').getContext('2d');
        const usersChart = new Chart(ctxUsers, {
            type: 'line',
            data: {
                labels: ['Day 1', 'Day 5', 'Day 10', 'Day 15', 'Day 20', 'Day 25'],
                datasets: [{
                    label: 'New Users',
                    data: [3, 6, 10, 7, 12, 18], // Replace with Model data
                    borderColor: '#0d6efd',
                    backgroundColor: 'rgba(13, 110, 253, 0.2)',
                    tension: 0.3,
                    fill: true
                }]
            },
            options: {
                responsive: true,
                plugins: { legend: { display: false } },
                scales: {
                    y: { beginAtZero: true }
                }
            }
        });

    </script>

}
else if (userRole == "Home Owner")
{
    <style>
        #binCircleChart {
            width: 40% !important;
            height: 40% !important;
        }

    </style>
    <div class="container my-4">
        <div class="row g-4">
            <div class="col-6 col-md-3 mb-3">
                <div class="card shadow-sm border-0 rounded-3 text-center h-100 ratio ratio-1x1">
                    <div class="ratio ratio-1x1">
                        <div class="card-body d-flex flex-column justify-content-center align-items-center bg-success text-white rounded-3">
                            <i class="fa-solid fa-money-bills fa-3x mb-2"></i>
                            <div class="fw-bold">Monthly Dues</div>
                            <div class="mt-2 text-light small">@((Model.MonthlyDue != null ? Model.MonthlyDue.Amount : 0).ToString("C", System.Globalization.CultureInfo.GetCultureInfo("en-PH"))) this month</div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="col-6 col-md-3 mb-3">
                <div class="card shadow-sm border-0 rounded-3 text-center h-100">
                    <div class="ratio ratio-1x1">
                        <div class="card-body d-flex flex-column justify-content-center align-items-center bg-success text-white rounded-3">
                            <canvas class="mb-2" id="binCircleChart"></canvas>
                            <div class="fw-bold">Bin Fill Level</div>
                            <div class="mt-2 text-light small" id="lastUpdated">Last updated: --</div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="col-6 col-md-3 mb-3">
                <div class="card shadow-sm border-0 rounded-3 text-center h-100 ratio ratio-1x1">
                    <div class="ratio ratio-1x1">
                        <div class="card-body d-flex flex-column justify-content-center align-items-center bg-success text-white rounded-3">
                            <i class="fa-solid fa-clock fa-3x mb-2"></i>
                            <div class="fw-bold">Collection Schedule</div>
                            <div class="mt-2 text-light small">@(Model.CollectionSchedule != null ? Model.CollectionSchedule.CollectionTime.ToString("hh:mm tt") + " " + Model.CollectionSchedule.DayOfWeek.Day + " " + Model.CollectionSchedule.FrequencyType.FrequencyName : "No Schedule set")</div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="col-6 col-md-3 mb-3">
                <div class="card shadow-sm border-0 rounded-3 text-center h-100 ratio ratio-1x1">
                    <div class="ratio ratio-1x1">
                        <div class="card-body d-flex flex-column justify-content-center align-items-center bg-success text-white rounded-3">
                            <i class="fa-solid fa-bullhorn fa-3x mb-2"></i>
                            <div class="fw-bold">Announcements</div>
                            <div class="mt-2 text-light small">@Model.NumberOfAnnouncement new updates</div>
                        </div>
                    </div>
                </div>
            </div>

        </div>
    </div>
    <script>
        // Initialize chart
        const ctx = document.getElementById('binCircleChart').getContext('2d');
        let percent = 0; // default until API loads

        const binCircleChart = new Chart(ctx, {
            type: 'doughnut',
            data: {
                datasets: [{
                    data: [percent, 100 - percent],
                    backgroundColor: ['#14422d', '#e9ecef'],
                    borderWidth: 0
                }]
            },
            options: {
                cutout: '80%',
                responsive: true,
                maintainAspectRatio: false,
                plugins: {
                    legend: { display: false },
                    tooltip: { enabled: false }
                }
            },
            plugins: [{
                id: 'percentageText',
                afterDraw(chart) {
                    const { ctx, chartArea: { width, height } } = chart;
                    ctx.save();
                    ctx.font = 'bold 300% Arial';
                    ctx.fillStyle = '#e9ecef';
                    ctx.textAlign = 'center';
                    ctx.textBaseline = 'middle';
                    ctx.fillText(percent + '%', width / 2, height / 2);
                }
            }]
        });

        // Function to fetch and update chart
        function loadBinStatus() {
            fetch('/BinLog/GetBinStatus') // 🔥 replace with your API endpoint
                .then(res => res.json())
                .then(data => {
                    percent = data.binStatusPercentage;

                    // Update chart data
                    binCircleChart.data.datasets[0].data = [percent, 100 - percent];
                    binCircleChart.update();

                    // Show last updated date
                    const updated = new Date(data.createdDate);
                    document.getElementById('lastUpdated').innerText =
                        "Last updated: " + updated.toLocaleString();
                })
                .catch(err => {
                    console.error('Error fetching bin status:', err);
                    document.getElementById('lastUpdated').innerText = "Error loading data";
                });
        }

        // Load immediately
        loadBinStatus();

        // Reload every 10 seconds
        setInterval(loadBinStatus, 5000);
    </script>

}
else if (userRole == "Garbage Collector")
{
    <div class="text-center">
        <h1 class="display-4">Garbage Collector DashBoard - WIP</h1>
        <p>Working in progress</p>
    </div>
}





