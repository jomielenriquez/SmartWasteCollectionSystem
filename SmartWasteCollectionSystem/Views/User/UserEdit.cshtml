@using SmartWasteCollectionSystem.Models
@using System.Security.Claims
@model EditScreenModel<User>
@{
    ViewData["Title"] = "User Edit Screen";
}
@if (Model.ErrorMessages != null)
{
    <br />
    <div class="alert alert-danger d-flex align-items-center" role="alert">
        <i class="fa-solid fa-triangle-exclamation"></i>
        <div>
            @foreach (var error in Model.ErrorMessages)
            {
                <div>@error</div>
            }
        </div>
    </div>
}

<!-- Leaflet CSS -->
<link rel="stylesheet" href="https://unpkg.com/leaflet/dist/leaflet.css" />

<style>
    #map {
        height: 400px;
        width: 100%;
        border: 1px solid #ccc;
        border-radius: 8px;
    }
</style>

<div class="card mb-3">
    <div class="card-header">User</div>
    <div class="card-body">
        <Custom:Form id="UserAccount"
                     submit-tag="Save"
                     controller="User"
                     action="Save"
                     cancel-redirect="/User/ListScreen">
            <Custom:TextBox id="UserId"
                            label="UserId"
                            type="text"
                            value="@Model.Data.UserId"
                            is-hidden="true"
                            placeholder="">
            </Custom:TextBox>
            <Custom:TextBox id="FirstName"
                            label="First Name"
                            type="text"
                            value="@Model.Data.FirstName"
                            placeholder="Enter First Name"
                            is-required="true">
            </Custom:TextBox>
            <Custom:TextBox id="LastName"
                            label="Last Name"
                            type="text"
                            value="@Model.Data.LastName"
                            placeholder="Enter Last Name"
                            is-required="true">
            </Custom:TextBox>
            <Custom:TextBox id="BlockNumber"
                            label="Block Number"
                            type="text"
                            value="@Model.Data.BlockNumber"
                            placeholder="Enter block number"
                            is-required="true">
            </Custom:TextBox>
            <Custom:TextBox id="LotNumber"
                            label="Lot Number"
                            type="text"
                            value="@Model.Data.LotNumber"
                            placeholder="Enter lot number"
                            is-required="true">
            </Custom:TextBox>
            <Custom:TextBox id="StreetName"
                            label="Street Name"
                            type="text"
                            value="@Model.Data.StreetName"
                            placeholder="Enter street name">
            </Custom:TextBox>
            <Custom:TextBox id="ContactNumber"
                            label="Contact Number"
                            type="text"
                            pattern="^\+63\d{10}$"
                            value="@Model.Data.ContactNumber"
                            placeholder="+639XXXXXXXXX"
                            is-required="true">
            </Custom:TextBox>
            <Custom:TextBox id="MoveInDate"
                            label="Move-in Date"
                            type="date"
                            value="@Model.Data.MoveInDate.ToString("yyyy-MM-dd")"
                            placeholder="Enter move-in date"
                            is-required="true">
            </Custom:TextBox>
            <Custom:TextBox id="Email"
                            label="Email"
                            type="email"
                            value="@Model.Data.Email"
                            placeholder="Enter email"
                            is-required="true">
            </Custom:TextBox>

            @{
                var userId = User.Claims.FirstOrDefault(c => c.Type == "Id")?.Value;
                if ((!string.IsNullOrEmpty(userId) && new Guid(userId) == Model.Data.UserId) || Model.Data.UserId == Guid.Empty)
                {

                    <Custom:TextBox id="Password"
                                    label="Password"
                                    type="password"
                                    value=""
                                    placeholder="Enter Password"
                                    is-helper-enabled="true"
                                    helper-message="Enter a password to update, or leave it blank to skip.">
                    </Custom:TextBox>
                }
            }
            <Custom:Dropdown items="@Model.UserRoles"
                             id="UserRoleId"
                             label="UserRole"
                             key-property="UserRoleId"
                             value-property="RoleName"
                             selected-value="@Model.Data.UserRoleId"
                             is-required="true">
            </Custom:Dropdown>

            <Custom:TextBox id="Latitude"
                            label="Latitude"
                            type="text"
                            value="@Model.Data.Latitude"
                            placeholder=""
                            is-hidden="true">
            </Custom:TextBox>
            <Custom:TextBox id="Longitude"
                            label="Longitude"
                            type="text"
                            value="@Model.Data.Longitude"
                            placeholder=""
                            is-hidden="true">
            </Custom:TextBox>

        </Custom:Form>
    </div>
</div>

<div id="LocationPicker">
    <h3>Select Location</h3>
    <div id="map"></div>
</div>

<!-- Leaflet JS -->
<script src="https://unpkg.com/leaflet/dist/leaflet.js"></script>

<script>
    $(document).ready(function () {
        $("#UserRoleId").on("change", function () {
            var selectedText = $(this).find("option:selected").text();
            if(selectedText == "Home Owner"){
                $("#LocationPicker").css("display","");
            }
            else{
                $("#LocationPicker").css("display","none");
            }
        });
        var userRole = '@(Model.Data?.UserRole?.RoleName ?? "Home Owner")';

        if(userRole == "Home Owner"){
            $("#LocationPicker").css("display","");
        }
        else{
            $("#LocationPicker").css("display","none");
        }

        setupMap();
    });

    function setupMap(){
        var latitude = @(Model.Data.Latitude.HasValue? Model.Data.Latitude.Value.ToString(System.Globalization.CultureInfo.InvariantCulture) : "14.069444");
        var longitude = @(Model.Data.Longitude.HasValue? Model.Data.Longitude.Value.ToString(System.Globalization.CultureInfo.InvariantCulture) : "121.143039");

        // Initial map center (example: Manila)
        console.log(@Model.Data.Longitude);

        var map = L.map('map').setView([latitude, longitude], 13);

        // Add OpenStreetMap tiles (free!)
        L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
            attribution: '&copy; <a href="https://www.openstreetmap.org/">OpenStreetMap</a> contributors'
        }).addTo(map);

        // Add a draggable marker
        var marker = L.marker([latitude, longitude], { draggable: true }).addTo(map);

        // Update hidden inputs when marker is moved
        function updateLatLng(lat, lng) {
            document.getElementById("Latitude").value = lat;
            document.getElementById("Longitude").value = lng;
        }

        // Set initial values
        updateLatLng(marker.getLatLng().lat, marker.getLatLng().lng);

        // On marker drag
        marker.on('dragend', function (e) {
            var latlng = e.target.getLatLng();
            updateLatLng(latlng.lat, latlng.lng);
        });

        // Allow click on map to move marker
        map.on('click', function (e) {
            marker.setLatLng(e.latlng);
            updateLatLng(e.latlng.lat, e.latlng.lng);
        });
    }
</script>